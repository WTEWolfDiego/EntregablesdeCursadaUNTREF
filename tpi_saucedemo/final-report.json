{
  "stats": {
    "suites": 3,
    "tests": 3,
    "passes": 3,
    "pending": 0,
    "failures": 0,
    "testsRegistered": 3,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false,
    "start": "2025-10-23T02:51:33.166Z",
    "end": "2025-10-23T12:56:50.167Z",
    "duration": 36317001
  },
  "results": [
    {
      "uuid": "b5f0fceb-9757-4fab-9dd8-97e087ab08b2",
      "title": "",
      "fullFile": "cypress\\e2e\\caso2.cy.js",
      "file": "cypress\\e2e\\caso2.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "fae419e1-516e-4868-bca9-cdf904730db9",
          "title": "SauceDemo - Carrito y Validación de Checkout",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Caso 2: Agregar productos, ir al checkout y validar errores de formulario",
              "fullTitle": "SauceDemo - Carrito y Validación de Checkout Caso 2: Agregar productos, ir al checkout y validar errores de formulario",
              "timedOut": null,
              "duration": 4066,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// --- 1. Incorporar al carrito todos los elementos ---\n// Seleccionar todos los botones y hacer clic en ellos\ncy.get('.btn_inventory').click({\n  multiple: true\n});\n// Verificar que el icono del carrito muestre el total (6)\ncy.get('.shopping_cart_badge').should('have.text', '6');\n// --- 2. Ir al carrito y verificar elementos ---\ncy.get('.shopping_cart_link').click();\n// Verificar que la URL es la del carrito\ncy.url().should('include', '/cart.html');\n// Verificar que hay 6 elementos listados\ncy.get('.cart_item').should('have.length', 6);\n// --- 3. Ir al checkout ---\ncy.get('#checkout').click();\n// Verificar que la URL es la del checkout\ncy.url().should('include', '/checkout-step-one.html');\n// --- 4. Validar error de Apellido ---\n// Ingresar el nombre\ncy.get('#first-name').type('Juan');\ncy.get('#continue').click();\n// Verificar el mensaje de error de Apellido\ncy.get('.error-message-container').should('contain', 'Error: Last Name is required');\n// --- 5. Validar error de Código Postal ---\n// Ingresar el apellido\ncy.get('#last-name').type('Perez');\ncy.get('#continue').click();\n// Verificar el mensaje de error de Código Postal\ncy.get('.error-message-container').should('contain', 'Error: Postal Code is required');",
              "err": {},
              "uuid": "2bcf9366-1516-4a9c-a4c3-d037e8967bdf",
              "parentUUID": "fae419e1-516e-4868-bca9-cdf904730db9",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "2bcf9366-1516-4a9c-a4c3-d037e8967bdf"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 4066,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "91986897-0bd3-4baa-8deb-89cedd8e3c75",
      "title": "",
      "fullFile": "cypress\\e2e\\caso3.cy.js",
      "file": "cypress\\e2e\\caso3.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "fdfc7d42-d2fc-484d-b41b-3c07b68ae93d",
          "title": "SauceDemo - Ciclo Completo: Agregar, Remover y Checkout",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Caso 3: Verificar remoción de artículo y finalizar compra",
              "fullTitle": "SauceDemo - Ciclo Completo: Agregar, Remover y Checkout Caso 3: Verificar remoción de artículo y finalizar compra",
              "timedOut": null,
              "duration": 4557,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// --- 1. Agregar un elemento al carrito ---\n// Selector corregido: usamos .btn_inventory para encontrar el botón\ncy.get('.btn_inventory').first().click();\n// Verificar que el carrito tiene 1 artículo\ncy.get('.shopping_cart_badge').should('have.text', '1');\n// --- 2. Ir al carrito y remover el artículo ---\ncy.get('.shopping_cart_link').click();\n// Remover el artículo del carrito (el botón de remover tiene la clase .btn_secondary en esta vista)\ncy.get('.cart_list').find('.btn_secondary').click();\n// --- 3. Verificar que el sitio no tiene artículos agregados ---\n// Verificar que el badge del carrito desaparezca (no.exist)\ncy.get('.shopping_cart_badge').should('not.exist');\n// Verificar que la lista de ítems en el carrito esté vacía\ncy.get('.cart_list').find('.cart_item').should('not.exist');\n// --- 4. Ir a “Continue Shopping” ---\ncy.get('#continue-shopping').click();\n// Verificar que regresó al inventario\ncy.url().should('include', '/inventory.html');\n// --- 5. Agregar 2 elementos ---\n// Selector corregido: usamos .btn_inventory para encontrar los botones\ncy.get('.btn_inventory').eq(0).click();\ncy.get('.btn_inventory').eq(1).click();\n// --- 6. Ir al carrito y verificar que los 2 elementos existan ---\ncy.get('.shopping_cart_link').click();\n// Verificar que hay 2 elementos listados en el carrito\ncy.get('.cart_item').should('have.length', 2);\n// --- 7. Hacer el checkout ---\ncy.get('#checkout').click();\n// Llenar el formulario\ncy.get('#first-name').type('Fernando');\ncy.get('#last-name').type('Gomez');\ncy.get('#postal-code').type('1704');\ncy.get('#continue').click();\n// Verificar la URL de resumen\ncy.url().should('include', '/checkout-step-two.html');\n// --- 8. Finalizar la compra ---\ncy.get('#finish').click();\n// --- 9. Verificar que la compra fue realizada ---\ncy.url().should('include', '/checkout-complete.html');\n// Verificar el mensaje de confirmación final\ncy.get('.complete-header').should('contain', 'Thank you for your order!');",
              "err": {},
              "uuid": "a3749fc1-ba1c-4063-9d6a-ff18de584a6d",
              "parentUUID": "fdfc7d42-d2fc-484d-b41b-3c07b68ae93d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a3749fc1-ba1c-4063-9d6a-ff18de584a6d"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 4557,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "2461ebce-3172-4a41-94a6-726135914959",
      "title": "",
      "fullFile": "cypress\\e2e\\caso1.cy.js",
      "file": "cypress\\e2e\\caso1.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "61a53eeb-d0ef-4c05-b175-5249452ebe4d",
          "title": "SauceDemo - Ordenamiento de Productos",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Caso 1: Logueo y Verificación de orden por precio (bajo a alto)",
              "fullTitle": "SauceDemo - Ordenamiento de Productos Caso 1: Logueo y Verificación de orden por precio (bajo a alto)",
              "timedOut": null,
              "duration": 2619,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// --- 1. Logueo al sitio como usuario standard_user ---\n// Comando para visitar la URL\ncy.visit('https://www.saucedemo.com/');\n// Ingresar Usuario y verificar valor\ncy.get('#user-name').type('standard_user');\ncy.get('#password').type('secret_sauce');\ncy.get('#login-button').click();\n// Verificar redirección\ncy.url().should('include', '/inventory.html');\n// --- 2. Ordenar los elementos por “price (low to high)” ---\n// Ejecución de la selección usando el valor interno 'lohi'\ncy.get('.product_sort_container').select('lohi');\n// Verificación del valor seleccionado (soluciona el error de desacoplamiento del DOM)\ncy.get('.product_sort_container').should('have.value', 'lohi');\n// --- 3. Verificar que los elementos estén ordenados ---\n// Obtener todos los precios de los productos visibles\ncy.get('.inventory_item_price').then($precios => {\n  // Mapear los elementos del DOM a un arreglo de números (precio)\n  const preciosNumericos = $precios.map((index, elemento) => {\n    // Obtener el texto, eliminar el símbolo '$' y convertir a número\n    return parseFloat(Cypress.$(elemento).text().replace('$', ''));\n  }).get();\n  // Crear una copia del arreglo y ordenar manualmente\n  const preciosOrdenados = [...preciosNumericos].sort((a, b) => a - b);\n  // Comparar el arreglo del sitio con el arreglo ordenado manualmente\n  expect(preciosNumericos, 'Verificar que el arreglo del sitio sea igual al arreglo ordenado').to.deep.equal(preciosOrdenados);\n});",
              "err": {},
              "uuid": "7d984201-d342-4d35-b8e6-17793d134d3e",
              "parentUUID": "61a53eeb-d0ef-4c05-b175-5249452ebe4d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "7d984201-d342-4d35-b8e6-17793d134d3e"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2619,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.4"
    },
    "marge": {
      "options": {
        "reportDir": "cypress-reports",
        "json": true,
        "overwrite": false
      },
      "version": "6.3.0"
    }
  }
}